scalar Json

type Mutation {
    # Exchanges a JWT for a session cookie which will be read by all subsequent mutation- and query-calls.
    # When a User exchanges a token for the first time, a Agent and Identity will be created.
    exchangeToken(jwt:String!) : ExchangeTokenResponse!

    updatePublicData(data:Json) : UpdatePublicDataResponse!
    updatePrivateData(data:String) : UpdatePrivateDataResponse!
}

type Query {
    version : Version

    # Gets the public data of an identity. If no public key was passed, the query returns the own public data.
    publicData(identityPublicKey:String) : Json

    # Gets the public and private data that is associated with the Identity
    privateData : String!

    # Gets the identity private key of the currently logged-on agent.
    # Depending on the agent type, this key is encrypted or not.
    identityPrivateKey : String!

    identityPublicKey: String!
}

interface ActionResponse {
    success: Boolean!
    errorMessage: String
}

type ExchangeTokenResponse implements ActionResponse {
    success: Boolean!
    errorMessage: String
}

type UpdatePublicDataResponse implements ActionResponse {
    success: Boolean!
    errorMessage: String
}

type UpdatePrivateDataResponse implements ActionResponse {
    success: Boolean!
    errorMessage: String
}

type Version {
    major: Int!
    minor: Int!
    revision: Int!
}